<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.1.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>370</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.model::DocumentResourceLock
--
-lockId: Long
-docUsers: DocUsers
-tempDocValue: String
-timer: int
-dateCreated: Date
-lastModified: Date
--
+DocumentResourceLock(): ctor
+DocumentResourceLock(DocUsers docUsers): ctor
+updateTimeStamps(): void
+getDocUsers(): DocUsers
+setDocUsers(DocUsers docUsers): void
+getLockId(): Long
+getDateCreated(): Date
+getLastModified(): Date
+getTempDocValue(): String
+getTimer(): int
+setTimer(int timer): void
+setTempDocValue(String tempDoc): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>380</x>
      <y>0</y>
      <w>490</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.controller::WebSocketController
--
-log = LoggerFactory.getLogger(WebSocketController.class): Logger
-docDao: DocumentDao
-docWebSocketService: DocumentFeedService
-resLockDao: DocumentResourceLockDao
-userDao: UserDao
-docUserDao: DocUsersDao
--
+createToken(Principal p): Message&lt;Document&gt;
+checkDoc(Document doc, Principal p): Message&lt;DocumentResourceLock&gt;
+broadcastUser(Document doc, Principal p): void
+autoSave(Document doc, Principal p): void
+leaveDoc(Message&lt;List&lt;Users&gt;&gt; msg, Principal p): void
+saveDoc(Document doc, Principal p): Message&lt;Document&gt;
+checkResourceLock(String userName, Long docId): String
+editDoc(Document doc, Principal p): Message&lt;DocumentResourceLock&gt;
+deleteDocument(Document doc): void
+addDocument(Document doc): void
+startupHandler(BrokerAvailabilityEvent event): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>0</y>
      <w>250</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.model::Users
--
-userId: Long
-userName: String
-userPass: String
-userHash: int
-enabled: int
--
+Users(): ctor
+Users(Users users): ctor
+getUserPass(): String
+setUserPass(String userPass): void
+getEnabled(): int
+setEnabled(int enabled): void
+getUserId(): Long
+setUserId(Long userId): void
+getUserName(): String
+setUserName(String userName): void
+getUserHash(): int
+setUserHash(int userHash): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1140</x>
      <y>0</y>
      <w>280</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.model::Document
--
-docId: Long
-docName: String
-docValue: String
-docVersion: Long
--
+Document(String docName): ctor
+Document(): ctor
+getDocVersion(): Long
+setDocVersion(Long docVersion): void
+getDocName(): String
+setDocName(String docName): void
+getDocValue(): String
+setDocValue(String docValue): void
+getDocId(): Long
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1430</x>
      <y>0</y>
      <w>270</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.model::Message
--
-hash: String
-task: String
-object: T
--
+Message(): ctor
+Message(T object, String task): ctor
+getHash(): String
+setHash(String hash): void
+getTask(): String
+setTask(String task): void
+getObject(): T
+setObject(T object): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>370</y>
      <w>290</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.model::DocUsers
--
-duId: Long
-user: Users
-doc: Document
--
+DocUsers(): ctor
+DocUsers(Document doc, Users user): ctor
+getDuId(): Long
+getUser(): Users
+setUser(Users user): void
+getDoc(): Document
+setDoc(Document doc): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>370</y>
      <w>400</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.persistence::CustomUserDetails
--
-serialVersionUID = 1L: long
-userRoles: List&lt;String&gt;
--
+CustomUserDetails(Users user, List&lt;String&gt; userRoles): ctor
+getAuthorities(): Collection&lt;? extends GrantedAuthority&gt;
+getPassword(): String
+getUsername(): String
+isAccountNonExpired(): boolean
+isAccountNonLocked(): boolean
+isCredentialsNonExpired(): boolean
+isEnabled(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>710</x>
      <y>370</y>
      <w>270</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.model::UserRole
--
-userRoleId: Long
-userId: Long
-role: String
--
+getUserRoleId(): Long
+setUserRoleId(Long userRoleId): void
+getUserId(): Long
+setUserId(Long userId): void
+getRole(): String
+setRole(String role): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>990</x>
      <y>370</y>
      <w>540</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.persistence::DocumentFeedServiceImpl
--
-messaging: SimpMessageSendingOperations
--
+DocumentFeedServiceImpl(SimpMessageSendingOperations messaging): ctor
+broadcastDocument(Document doc): void
+deleteDocument(Long docId): void
+broadcastUsersToLockUser(String userName, Message&lt;List&lt;String&gt;&gt; users): void
+broadcastUsers(Long docId, Message&lt;List&lt;String&gt;&gt; users): void
+lockDockument(Long docId, Message&lt;DocumentResourceLock&gt; msg): void
+saveDocument(Long docId, Message&lt;Document&gt; newDoc): void
+timeOverMessage(String userName, Message&lt;Document&gt; doc): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1540</x>
      <y>370</y>
      <w>540</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
de.mariokramer.wsrlock.persistence::DocumentFeedService
--
--
+broadcastDocument(Document doc): void
+deleteDocument(Long id): void
+broadcastUsers(Long docId, Message&lt;List&lt;String&gt;&gt; users): void
+broadcastUsersToLockUser(String userName, Message&lt;List&lt;String&gt;&gt; users): void
+timeOverMessage(String userName, Message&lt;Document&gt; doc): void
+lockDockument(Long docId, Message&lt;DocumentResourceLock&gt; msg): void
+saveDocument(Long docId, Message&lt;Document&gt; newDoc): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>610</y>
      <w>390</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.config.security::WebSecurityConfig
--
~userDetailsService: UserDetailsService
--
#configure(AuthenticationManagerBuilder auth): void
+passwordEncoder(): PasswordEncoder
+getMatcher(): RequestMatcher
#configure(HttpSecurity http): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>400</x>
      <y>610</y>
      <w>550</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
de.mariokramer.wsrlock.persistence::DocUsersDao
--
--
~findAllByUser(Users user): List&lt;DocUsers&gt;
~findOneByUserAndDoc(Users user, Document doc): DocUsers
~findAllByDoc(Document doc): List&lt;DocUsers&gt;
~existsByUser(@Param("user") Users user, @Param("doc") Document doc): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>610</y>
      <w>460</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
de.mariokramer.wsrlock.persistence::UserDao
--
--
~getUsersByUserName(String userName): Users
~findAllUsersByUserId(Long userId): List&lt;Users&gt;
~existsByUserName(@Param("userName") String userName): boolean
~findOneByUserName(String userName): Users
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1430</x>
      <y>610</y>
      <w>830</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.config.db::DatabaseJPAConfig
--
--
+dataSource(): DataSource
+jpaVendorAdapter(): JpaVendorAdapter
+entityManagerFactory(DataSource dataSource, JpaVendorAdapter jpaVendorAdapter): LocalContainerEntityManagerFactoryBean
+transactionManager(EntityManagerFactory emf): JpaTransactionManager
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>760</y>
      <w>540</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.config::WebConfig
--
--
+viewResolver(): ViewResolver
+configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer): void
+addResourceHandlers(ResourceHandlerRegistry registry): void
+addViewControllers(ViewControllerRegistry registry): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>550</x>
      <y>760</y>
      <w>530</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.persistence::CustomUserDetailsService
--
-userDao: UserDao
-userRoleDao: UserRoleDao
--
+CustomUserDetailsService(UserDao userDao, UserRoleDao userRolesDao): ctor
+loadUserByUsername(String username): UserDetails
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1090</x>
      <y>760</y>
      <w>470</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
de.mariokramer.wsrlock.persistence::DocumentResourceLockDao
--
--
~existsByDocUsers(@Param("docUsers") DocUsers docUsers): boolean
~findOneByDocUsers(DocUsers docUsers): DocumentResourceLock
~deleteByDocUsers(DocUsers docUsers): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1570</x>
      <y>760</y>
      <w>610</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.config.security::CsrfSecurityRequestMatcher
--
-allowedMethods = Pattern.compile("^(POST|GET|HEAD|TRACE|OPTIONS)$"): Pattern
-unprotectedMatcher = new AntPathRequestMatcher("/**/xhr_send**"): AntPathRequestMatcher
--
+matches(HttpServletRequest request): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>890</y>
      <w>320</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.config::WebAppInitializer
--
--
#getRootConfigClasses(): Class&lt;?&gt;[]
#getServletConfigClasses(): Class&lt;?&gt;[]
#getServletMappings(): String[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>890</y>
      <w>440</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.config.websocket::WebSocketStompConfig
--
--
+registerStompEndpoints(StompEndpointRegistry registry): void
-getInterceptor(): HandshakeInterceptor
+configureMessageBroker(MessageBrokerRegistry registry): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>780</x>
      <y>890</y>
      <w>770</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.controller::MainController
--
-docDao: DocumentDao
--
+redirectStart(ModelAndView model): ModelAndView
+redirectReadDoc(ModelAndView model, @RequestParam(value = "docId", required = true) Long docId): ModelAndView
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1560</x>
      <y>890</y>
      <w>970</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.config.websocket::WebSocketHandshakeInterceptor
--
--
+beforeHandshake(ServerHttpRequest request, ServerHttpResponse response, WebSocketHandler wsHandler, Map&lt;String, Object&gt; attributes): boolean
+afterHandshake(ServerHttpRequest request, ServerHttpResponse response, WebSocketHandler wsHandler, Exception exception): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1010</y>
      <w>340</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
de.mariokramer.wsrlock.persistence::DocumentDao
--
--
~findByDocName(String docName): Document
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>350</x>
      <y>1010</y>
      <w>350</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
de.mariokramer.wsrlock.persistence::UserRoleDao
--
--
+findRoleByUserName(String username): List&lt;String&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>710</x>
      <y>1010</y>
      <w>510</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.config.security::WebSocketSecurityConfig
--
--
#configureInbound(MessageSecurityMetadataSourceRegistry messages): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1230</x>
      <y>1010</y>
      <w>340</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>de.mariokramer.wsrlock.config::SecurityRootConfig
--
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
